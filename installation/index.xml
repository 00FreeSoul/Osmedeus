<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Installation on Osmedeus Documentation</title>
    <link>https://j3ssie.github.io/Osmedeus/installation/</link>
    <description>Recent content in Installation on Osmedeus Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Jul 2019 13:17:33 +0700</lastBuildDate>
    
	<atom:link href="https://j3ssie.github.io/Osmedeus/installation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Setup</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/docker-setup/</link>
      <pubDate>Thu, 08 Aug 2019 21:30:23 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/docker-setup/</guid>
      <description>Using Docker Check out docker-osmedeus by mabnavarrete for docker installation.
TL;DR Run this command to pull container and install Osmedeus.
Installation docker run -d --net host --name osmedeus mablanco/osmedeus  Simple usage docker exec -it osmedeus ./osmedeus.py --client -t example.com  or access container through bash then navigate to ~/ and you&amp;rsquo;re good to go.
docker exec -it osmedeus /bin/bash -i  Access the UI Credentials by default will place in ~/.</description>
    </item>
    
    <item>
      <title>Remote Setup</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/remote-setup/</link>
      <pubDate>Thu, 08 Aug 2019 21:30:31 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/remote-setup/</guid>
      <description>Setup REST API server on remote server Open your tmux or what ever and run the API server persistence by using this command
python3 server/manage.py runserver  or
python3 server/manage.py runserver 0.0.0.0:8000  if you want to bind this server on other IP and port.
Run osmedeus client Open your tmux or what ever and run on that machine too (recommendation)
./osmedeus -t example.com  or if you really want to run a client on your server just do</description>
    </item>
    
    <item>
      <title>Token setup</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/token-setup/</link>
      <pubDate>Thu, 08 Aug 2019 21:51:02 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/token-setup/</guid>
      <description>Create Slack token Create new app on this page
Add app as a Bot
Setup a name or image of your Bot
Install app to your workspace
Copy Oauth Access Token
Setup Slack notification in Osmedeus This is optional config, you don&amp;rsquo;t have to do this to get the tools done.
You can only provide REPORT_CHANNEL and SLACK_BOT_TOKEN to get less verbose notification.
 STATUS_CHANNEL is the place to put notifications.</description>
    </item>
    
    <item>
      <title>User Management</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/user-management/</link>
      <pubDate>Mon, 09 Sep 2019 11:43:38 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/user-management/</guid>
      <description>Guide Osmedeus use Django authentication system to mange users and create token.
You directly create new user by using this command below.
python3 server/manage.py createsuperuser  These user also used to login on Web UI.</description>
    </item>
    
  </channel>
</rss>