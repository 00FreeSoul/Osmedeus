<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Osmedeus Documentation</title>
    <link>https://j3ssie.github.io/Osmedeus/</link>
    <description>Recent content in Home on Osmedeus Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jul 2019 22:50:41 +0700</lastBuildDate>
    
	<atom:link href="https://j3ssie.github.io/Osmedeus/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Setup</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/docker-setup/</link>
      <pubDate>Thu, 08 Aug 2019 21:30:23 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/docker-setup/</guid>
      <description>Using Docker Check out docker-osmedeus by mabnavarrete for docker installation.
TL;DR Run this command to pull container and install Osmedeus.
Installation docker run -d --net host --name osmedeus mablanco/osmedeus  Simple usage docker exec -it osmedeus ./osmedeus.py --client -t example.com  or access container through bash then navigate to ~/ and you&amp;rsquo;re good to go.
docker exec -it osmedeus /bin/bash -i  Access the UI Credentials by default will place in ~/.</description>
    </item>
    
    <item>
      <title>Remote Setup</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/remote-setup/</link>
      <pubDate>Thu, 08 Aug 2019 21:30:31 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/remote-setup/</guid>
      <description>Setup Flask API server on remote server. Allow Web UI access from remote but do not allow run command directly on it.
python3 core/app.py -b 0.0.0.0 -p 5000  or
Because this API allows executing command on your server so by default it only allows execute command from localhost so if you specify --remote It&amp;rsquo;s will remove local protection on that API.
python3 core/app.py -b 0.0.0.0 -p 5000 --remote  Web UI connect Connect your UI to API Server.</description>
    </item>
    
    <item>
      <title>Slack Config</title>
      <link>https://j3ssie.github.io/Osmedeus/installation/slack-config/</link>
      <pubDate>Thu, 08 Aug 2019 21:51:02 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/installation/slack-config/</guid>
      <description>This is optional config you don&amp;rsquo;t have to do this to get the tools done.
You can only provide REPORT_CHANNEL and SLACK_BOT_TOKEN to get less verbose noti.
 STATUS_CHANNEL is the place to put notifications.
REPORT_CHANNEL is the place to put output file.
LOG_CHANNEL is the place to put command was executed.
STDS_CHANNEL is the place to put all stdout.
SLACK_BOT_TOKEN is bot API or user API token that have permission to access channel above.</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://j3ssie.github.io/Osmedeus/web-ui/features/</link>
      <pubDate>Thu, 08 Aug 2019 22:14:29 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/web-ui/features/</guid>
      <description>View Summary report 
View Report of each module 
View Log Command as well as Stdout and Output 
Beatify bash render output 
Execute stuff directly from UI</description>
    </item>
    
    <item>
      <title>Report Mode</title>
      <link>https://j3ssie.github.io/Osmedeus/advanced/report-mode/</link>
      <pubDate>Thu, 08 Aug 2019 21:47:55 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/advanced/report-mode/</guid>
      <description>Report mode Usage [Report Mode] =================== sum - Summary report list - List avalible workspace short - Only print final output of each module full - Print all output of each module path - Only print final path of each module raw - Print all stdout of each module html - Export to html [Filter module] =================== subdomain, recon, assetfinding takeover, screenshot portscan, dirbrute, vulnscan gitscan, cors, ipspace, sslscan, headers [Report Usage] =================== .</description>
    </item>
    
    <item>
      <title>Direct Mode</title>
      <link>https://j3ssie.github.io/Osmedeus/advanced/direct-mode/</link>
      <pubDate>Thu, 08 Aug 2019 21:44:32 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/advanced/direct-mode/</guid>
      <description>Usage of Direct Mode The goal of this mode is to create lots of advanced alias for your routine.
./osmedeus.py -m &amp;lt;modules&amp;gt; -i/-I single_input/list_of_inputs.txt [-t result_folder]  you can even use multiple modules by seperate it with ,.
 E.g: ./osmedeus.py -m &amp;quot;portscan,vuln&amp;quot; -I list_of_targets.txt -t output_folder
Modules supported direct mode List module =========== subdomain - Scanning subdomain and subdomain takerover portscan - Screenshot and Scanning service for list of domain screenshot - Screenshot list of hosts asset - Asset finding like URL, Wayback machine vuln - Scanning version of services and checking vulnerable service git - Scanning for git repo dirb - Do directory search on the target  Subdomain This module not required input options (-i/-I).</description>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://j3ssie.github.io/Osmedeus/index.html</link>
      <pubDate>Tue, 30 Jul 2019 22:50:41 +0700</pubDate>
      
      <guid>https://j3ssie.github.io/Osmedeus/index.html</guid>
      <description>Fully automated offensive security framework for reconnaissance and vulnerability scanning Overview    Page Description     Introduction Overview about Osmedeus   Architecture Understand the architecture of Osmedeus   Showcases Demo some showcases   Installation Guide to Installation   Usage Guide to basic usage   Advanced Guide to advanced usage   Web UI Guide to Web UI access   Common Issues Resolve common issues   Donation Supporting me    </description>
    </item>
    
  </channel>
</rss>